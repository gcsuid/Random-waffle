from sec_downloader import Downloader
from sec_downloader.types import RequestedFilings
from bs4 import BeautifulSoup

dl = Downloader("MyCompanyName", "email@example.com")


cik_numbers = cik_numbers = [
    "0001274644", "0001310114", "0001502034", "0001122388", "0001131457", "0001487712", 
    "0001084817", "0001491501", "0001369786", "0001169988", "0001509991", "0001509432", 
    "0001489096", "0001271024", "0001392522", "0001163932", "0001311230", "0001498710", 
    "0001383729", "0001230276", "0001518222", "0001045829", "0001418862", "0001366684", 
    "0001514705", "0001423542", "0001617640", "0001357204", "0001399935", "0001492426", 
    "0001182325", "0001615817", "0001517175", "0001158863", "0001314592", "0001378718", 
    "0001340127", "0001511737", "0001490281", "0001364962", "0001126234", "0001466301", 
    "0001491778", "0001521332", "0001490930", "0001311241", "0001294924", "0001419852", 
    "0001275712", "0001462633", "0001528129", "0001528837", "0001509589", "0001439404", 
    "0001530721", "0001461993", "0001080747", "0001528396", "0001274792", "0001526119", 
    "0001520006", "0001524741", "0000767884", "0001340652", "0001352010", "0001490165", 
    "0001330421", "0001313275", "0001443669", "0001345016", "0001493594", "0001411207", 
    "0001301031", "0001463101", "0001420850", "0001117733", "0001431897", "0001372375", 
    "0001533932", "0001129260", "0001439288", "0001439095", "0001401257", "0001223862", 
    "0001533924", "0001212458", "0001353283", "0001174266", "0001356576", "0001535031", 
    "0001537951", "0001577785", "0001524025", "0001201663", "0001526796", "0001491576", 
    "0000890264", "0001373715", "0001312928", "0001327567", "0001524931", "0001544116", 
    "0001540400", "0001177609", "0001547459", "0001415301", "0001375271", "0001237831", 
    "0001386858", "0001533454", "0001264587", "0001546417", "0001550695", "0000880177", 
    "0001245104", "0001107843", "0001505512", "0001349454", "0001280263", "0001378992", 
    "0001270073", "0001436304", "0001383871", "0001549346", "0001539838", "0001327811", 
    "0001555365", "0001294016", "0001408356", "0001437578", "0001293310", "0001168197", 
    "0001555280", "0001349929", "0001328581", "0001561627", "0001180079", "0001177648", 
    "0001389002", "0001118417", "0001564822", "0001373707", "0001024657", "0001564902", 
    "0001547063", "0001411488", "0001555492", "0001391636", "0001555177", "0001131543", 
    "0001490660", "0001478242", "0001269021", "0001303652", "0001169652", "0001533526", 
    "0001284807", "0001571498", "0001509190", "0001484504", "0001565337", "0001024305", 
    "0001372514", "0001293971", "0001070081", "0001434868", "0001537054", "0001402057", 
    "0001275158", "0001375796", "0001573097", "0001401708", "0001572684", "0001562594", 
    "0001573166", "0001567683", "0001302573", "0001475274", "0001482080", "0001383701", 
    "0001566897", "0001476963", "0001439222", "0001130598", "0001574648", "0001259515", 
    "0001441693", "0001575515", "0001415624", "0001122897", "0001578318", "0001575828", 
    "0001424929", "0001356090", "0001574815", "0001158114", "0001280600", "0001576169", 
    "0001385228", "0001577095", "0001563699", "0001434316", "0001370880", "0001175505", 
    "0001488613", "0001561660", "0001477200", "0001410939", "0001384905", "0001407190", 
    "0001577916", "0001579298", "0001348324", "0001195734", "0001553588", "0001433270", 
    "0001393052", "0001581908", "0001125345", "0001337553", "0001517228", "0001237746", 
    "0001411574", "0001384101", "0001348334", "0001411688", "0001418091", "0001361470", 
    "0001253689", "0001364954", "0001581164", "0001503802", "0001478484", "0001580156", 
    "0001416792", "0001438133", "0001361248", "0001429560", "0001280776", "0001326732", 
    "0001579157", "0001411579", "0001584509", "0001585689", "0001452751", "0001412270", 
    "0001584952", "0001588216", "0001588238", "0001590976", "0001346830", "0001105533", 
    "0001454189", "0001574596", "0001515673", "0001399529", "0001586105", "0001457612", 
    "0001587755", "0001592480", "0001485003", "0001305253", "0001269026", "0000827871", 
    "0001419600", "0001367920", "0001479290", "0001294133", "0001361113", "0001301501", 
    "0001497504", "0001115128", "0001314223", "0001433714", "0001591698", "0001410384", 
    "0001372414", "0001273636", "0001459417", "0001595974", "0001358483", "0000937098", 
    "0001594337", "0001288847", "0001594109", "0001595262", "0001412043", "0001328143", 
    "0001178253", "0001401914", "0001590955", "0001069899", "0001597033", "0001594879", 
    "0001132105", "0001432732", "0001423824", "0001592379", "0001428522", "0001499807", 
    "0001327318", "0001463172", "0001261249", "0001594466", "0001596532", "0001470099", 
    "0001145986", "0001576940", "0001599222", "0001600470", "0001459266", "0001598646", 
    "0001374690", "0001328015", "0001510580", "0001217234", "0001472343", "0001599947", 
    "0001604028", "000160636"]
for cik_number in cik_numbers:
   
    metadatas_10k = dl.get_filing_metadatas(RequestedFilings(ticker_or_cik=cik_number, form_type="10-K",limit=9999))

 
    metadatas_10q = dl.get_filing_metadatas(RequestedFilings(ticker_or_cik=cik_number, form_type="10-Q",limit=9999))

    if metadatas_10k:
        print(f"10-K Filings for CIK {cik_number}:")
        for metadata in metadatas_10k:
            print(metadata.primary_doc_url)

    
    if metadatas_10q:
        print(f"10-Q Filings for CIK {cik_number}:")
        for metadata in metadatas_10q:
            print(metadata.primary_doc_url)

